name: PR Checks

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript checks
        run: npm run typecheck

      - name: Run build verification
        run: node scripts/build-verifier.js

      - name: Run component tests
        run: npm run test:component

      - name: Run integration tests
        run: npm run test:integration
        if: hashFiles('vitest.integration.config.ts') != ''

      - name: Run E2E tests
        run: npm run test:e2e
        if: hashFiles('vitest.e2e.config.ts') != ''

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-node-${{ matrix.node-version }}
          path: |
            packages/*/coverage/
            test-results.xml
          retention-days: 7

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting
        run: |
          if [ -f ".prettierrc" ]; then
            npx prettier --check .
          else
            echo "No prettier config found, skipping format check"
          fi

      - name: Run linting
        run: |
          if [ -f "eslint.config.js" ] || [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ]; then
            npx eslint .
          else
            echo "No eslint config found, skipping lint check"
          fi

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for known vulnerabilities
        run: |
          if command -v snyk &> /dev/null; then
            snyk test
          else
            echo "Snyk not available, skipping vulnerability check"
          fi

  build-matrix:
    name: Build Matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: npm run build

      - name: Verify builds
        run: node scripts/build-verifier.js

  comprehensive:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run comprehensive test suite
        run: npm run test:ci

      - name: Generate test report
        run: |
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "All comprehensive tests completed successfully" >> $GITHUB_STEP_SUMMARY

  status-check:
    name: Status Check
    runs-on: ubuntu-latest
    needs: [test, lint, security, build-matrix]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.test.result }}" == "success" && 
                "${{ needs.lint.result }}" == "success" && 
                "${{ needs.security.result }}" == "success" && 
                "${{ needs.build-matrix.result }}" == "success" ]]; then
            echo "✅ All checks passed!"
            exit 0
          else
            echo "❌ Some checks failed:"
            echo "Test: ${{ needs.test.result }}"
            echo "Lint: ${{ needs.lint.result }}"
            echo "Security: ${{ needs.security.result }}"
            echo "Build Matrix: ${{ needs.build-matrix.result }}"
            exit 1
          fi